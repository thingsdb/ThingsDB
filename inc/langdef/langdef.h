/*
 * langdef.h
 *
 * This grammar is generated using the Grammar.export_c() method and
 * should be used with the libcleri module.
 *
 * Source class: LangDef
 * Created at: 2020-05-14 20:49:24
 */
#ifndef CLERI_EXPORT_LANGDEF_H_
#define CLERI_EXPORT_LANGDEF_H_

#include <cleri/cleri.h>

cleri_grammar_t * compile_langdef(void);

enum cleri_grammar_ids {
    CLERI_NONE,   // used for objects with no name
    CLERI_GID_ARRAY,
    CLERI_GID_ASSIGN,
    CLERI_GID_BLOCK,
    CLERI_GID_CHAIN,
    CLERI_GID_COMMENTS,
    CLERI_GID_ENUM_,
    CLERI_GID_EXPRESSION,
    CLERI_GID_FUNCTION,
    CLERI_GID_INDEX,
    CLERI_GID_INSTANCE,
    CLERI_GID_NAME,
    CLERI_GID_NAME_OPT_MORE,
    CLERI_GID_OPERATIONS,
    CLERI_GID_OPR0_MUL_DIV_MOD,
    CLERI_GID_OPR1_ADD_SUB,
    CLERI_GID_OPR2_BITWISE_AND,
    CLERI_GID_OPR3_BITWISE_XOR,
    CLERI_GID_OPR4_BITWISE_OR,
    CLERI_GID_OPR5_COMPARE,
    CLERI_GID_OPR6_CMP_AND,
    CLERI_GID_OPR7_CMP_OR,
    CLERI_GID_OPR8_TERNARY,
    CLERI_GID_O_NOT,
    CLERI_GID_PARENTHESIS,
    CLERI_GID_R_DOUBLE_QUOTE,
    CLERI_GID_R_SINGLE_QUOTE,
    CLERI_GID_SLICE,
    CLERI_GID_START,
    CLERI_GID_STATEMENT,
    CLERI_GID_STATEMENTS,
    CLERI_GID_TEMPLATE,
    CLERI_GID_THING,
    CLERI_GID_THING_BY_ID,
    CLERI_GID_T_CLOSURE,
    CLERI_GID_T_FALSE,
    CLERI_GID_T_FLOAT,
    CLERI_GID_T_INT,
    CLERI_GID_T_NIL,
    CLERI_GID_T_REGEX,
    CLERI_GID_T_STRING,
    CLERI_GID_T_TRUE,
    CLERI_GID_VAR,
    CLERI_GID_VAR_OPT_MORE,
    CLERI_GID_X_ARRAY,
    CLERI_GID_X_ASSIGN,
    CLERI_GID_X_BLOCK,
    CLERI_GID_X_CHAIN,
    CLERI_GID_X_CLOSURE,
    CLERI_GID_X_FUNCTION,
    CLERI_GID_X_INDEX,
    CLERI_GID_X_NOT,
    CLERI_GID_X_PARENTHESIS,
    CLERI_GID_X_TERNARY,
    CLERI_GID_X_THING,
    CLERI_END // can be used to get the enum length
};

#endif /* CLERI_EXPORT_LANGDEF_H_ */

