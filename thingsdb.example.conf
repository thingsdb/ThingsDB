# Welcome to the ThingsDB configuration file

[thingsdb]
#
# ThingsDB will listen for client connections on this port number.
#
#listen_client_port = 9200

#
# Listen for client connections only on a specific interface.
# Use value 0.0.0.0 (or :: for IPv6) to bind to all interfaces.
#
#bind_client_addr = 127.0.0.1

#
# ThingsDB will publish itself to other nodes using this node name. If not set, 
# the hostname will be used. This value may also be a valid IP address.
#
#node_name = localhost

#
# ThingsDB will listen for node connections on this port number.
#
#listen_node_port = 9220

#
# Listen for node connections only on a specific interface.
# Use value 0.0.0.0 (or :: for IPv6) to bind to all interfaces.
#
#bind_node_addr = 127.0.0.1

#
# Set the HTTP API port for allowing both JSON and MsgPack POST requests.
# If the port is not set (or 0), then the HTTP API will not enabled.
# default is 0.
# 
#http_api_port = 9210

#
# When ip_support is set to ALL, ThingsDB will listen and connect to both IPv4
# and IPv6 addresses.
# Valid options are ALL, IPV4ONLY and IPV6ONLY. Default is ALL.
#
#ip_support = ALL

#
# ThingsDB will use this path for storage.
#
#storage_path = /var/lib/thingsdb/

#
# Named PIPE for client connections. Support for client PIPE connections
# will be disabled if the value is not configured.
#
#pipe_client_name = /tmp/ti_client.sock

#
# When the number of events changes stored on disk is equal or greater
# than this threshold, then a full- instead of incremental store will be
# performed when in "away" mode. Default is 1000.
#
#threshold_full_storage = 1000

#
# Result size limit is checked when packing properties for a thing.
# If, at the check moment, the packed data size exceeds the limit, packing
# stops and an error will be returned. This limit is set in bytes and is used    
# to prevent a huge amount of data, typically when a high `deep` value is used. 
# The default is set to 20.971.520 bytes (20MiB).
# 
#result_size_limit = 20971520

#
# When the HTTP status port is not set (or 0), the service will not start. 
# Otherwise the HTTP request `/status`, `/ready` and `/healthy` are available
# which can be used for readiness and liveness requests. Default is 0.
#
#http_status_port = 8080

#
# Each node can be placed in a zone which is represented by an integer value 
# between `0` and `255`. The default zone is `0`. Zones are used when a query 
# is forwarded to another node to out-source some work. The *other* node is 
# selected randomly from all available nodes, but nodes in the same zone are 
# preferred.
#
#zone = 0

#
# Log a warning message when a query takes more than X second(s).
#
#query_duration_warn = 1.0

#
# Log an error message when a query takes more than X second(s).
#
#query_duration_error = 10.0

#
# Google Cloud storage support for writing backups to a path like:
#   gs://bucket/filename.tar.gz 
#
# Note that `gcloud` and `gsutil` must be installed before this service can 
# be used.
#
#gcloud_key_file = service_account.json

#
# Queries with a length below this threshold will be not be cached 
# by ThingsDB. 
#
# If not configured, ThingsDB will use a value of 200, so all queries with
# a length of 200 characters or more will be cached by default. (Unless
# caching is disabled, see `cache_expiration_time`)
#
#threshold_query_cache = 200

#
# Cached queries which are not used within the expiration period will be
# removed from the cache. This value sets the expiration time in seconds.
# A value of 0 will disable caching.
#
#cache_expiration_time = 900 
